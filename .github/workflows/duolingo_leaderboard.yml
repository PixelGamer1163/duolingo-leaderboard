name: Duolingo Leaderboard Position

on:
  schedule:
    - cron: '0 */6 * * *'  # Runs every 6 hours
  workflow_dispatch:  # Allows manual triggering

jobs:
  fetch-leaderboard-position:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}  # Use PAT for checkout

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Fetch Duolingo leaderboard position
        env:
          DUOLINGO_USERNAME: ${{ secrets.DUOLINGO_USERNAME }}
          DUOLINGO_PASSWORD: ${{ secrets.DUOLINGO_PASSWORD }}
          DUOLINGO_USER_ID: ${{ secrets.DUOLINGO_USER_ID }}
        run: |
          python - <<EOF
          import requests
          import json
          import os

          def login(username, password):
              url = "https://www.duolingo.com/login"
              data = {"login": username, "password": password}
              headers = {"User-Agent": "Mozilla/5.0"}
              response = requests.post(url, json=data, headers=headers)
              return response.cookies.get("jwt_token")

          def get_leaderboard_position(jwt_token, user_id):
              url = f"https://www.duolingo.com/2017-06-30/users/{user_id}?fields=id,username,league_ranking"
              headers = {
                  "Authorization": f"Bearer {jwt_token}",
                  "User-Agent": "Mozilla/5.0"
              }
              response = requests.get(url, headers=headers)
              user_data = response.json()
              return user_data.get("league_ranking", "Unknown")

          jwt_token = login(os.environ["DUOLINGO_USERNAME"], os.environ["DUOLINGO_PASSWORD"])
          position = get_leaderboard_position(jwt_token, os.environ["DUOLINGO_USER_ID"])
          
          with open('leaderboard_position.json', 'w') as f:
              json.dump({"position": position}, f)

          print(f"Current leaderboard position: {position}")
          EOF

      - name: Commit and push if changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add leaderboard_position.json
          git commit -m "Update leaderboard position" || exit 0
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}  # Use PAT for push